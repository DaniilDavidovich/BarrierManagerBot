from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import requests
import asyncio
import os

# üîê –¢–æ–∫–µ–Ω (–∑–∞–º–µ–Ω–∏ –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–∏ –¥–µ–ø–ª–æ–µ)
TOKEN = '8030938683:AAGiYEOw9ZiYc7bZLwXc-5Kl1pSFL7YIZJM'

# üîó –°—Å—ã–ª–∫–∏ –Ω–∞ —à–ª–∞–≥–±–∞—É–º—ã
URL_SOURCE = 'https://api.pushcut.io/2ztWwEmVX4f8IlE1pTohY/notifications/Barrier%20Source'
URL_NORTH = 'https://api.pushcut.io/2ztWwEmVX4f8IlE1pTohY/notifications/Barrier%20North'

# üì± –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
keyboard = [['Source Barrier', 'North Barrier']]
reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=False, resize_keyboard=True)

# üîí –§–ª–∞–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
is_busy = False

# üöÄ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        '–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ —à–ª–∞–≥–±–∞—É–º:',
        reply_markup=reply_markup
    )

# üîÅ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global is_busy

    if is_busy:
        await update.message.reply_text("‚è≥ –£–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ü–∏—è, –ø–æ–¥–æ–∂–¥–∏ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥...")
        return

    text = update.message.text

    if text == 'Source Barrier':
        asyncio.create_task(wrapped_request(update, URL_SOURCE, 'Source Barrier'))
    elif text == 'North Barrier':
        asyncio.create_task(wrapped_request(update, URL_NORTH, 'North Barrier'))
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –∫–Ω–æ–ø–∫—É –∏–∑ –º–µ–Ω—é.")

# üß† –û–±—ë—Ä—Ç–∫–∞ —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –∏ —Å–±—Ä–æ—Å–æ–º —Ñ–ª–∞–≥–∞
async def wrapped_request(update: Update, url: str, name: str):
    global is_busy
    is_busy = True
    try:
        await send_pushcut_request(update, url, name)
    finally:
        is_busy = False

# üì§ –ó–∞–ø—Ä–æ—Å + 5 —Å–æ–æ–±—â–µ–Ω–∏–π
async def send_pushcut_request(update: Update, url: str, name: str):
    for i in range(5):
        try:
            response = requests.post(url)
            if response.status_code == 200:
                await update.message.reply_text(f'üü¢ {name}: —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä ({i+1}/5) –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
            else:
                await update.message.reply_text(f'‚ö†Ô∏è {name} ‚Äî –æ—à–∏–±–∫–∞: {response.status_code} ({i+1}/5)')
        except Exception as e:
            await update.message.reply_text(f'‚ùå {name} ‚Äî –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ: {e} ({i+1}/5)')

        if i < 4:
            await asyncio.sleep(2)

# üèÅ –ó–∞–ø—É—Å–∫
if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler('start', start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
