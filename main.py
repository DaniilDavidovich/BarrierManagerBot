from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import requests
import os

# üõ° –ë–µ–∑–æ–ø–∞—Å–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
# TOKEN = os.getenv("BOT_TOKEN")

TOKEN2 = '8030938683:AAGiYEOw9ZiYc7bZLwXc-5Kl1pSFL7YIZJM'

# üîó URL –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —à–ª–∞–≥–±–∞—É–º–∞
URL_SOURCE = 'https://api.pushcut.io/2ztWwEmVX4f8IlE1pTohY/notifications/Barrier%20Source'
URL_NORTH = 'https://api.pushcut.io/2ztWwEmVX4f8IlE1pTohY/notifications/Barrier%20North'

# üì± –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
keyboard = [['Source Barrier', 'North Barrier']]
reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=False, resize_keyboard=True)

# üëã –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        '–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ —à–ª–∞–≥–±–∞—É–º:',
        reply_markup=reply_markup
    )

# üì¶ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    text = update.message.text

    if text == 'Source Barrier':
        await send_pushcut_request(update, URL_SOURCE, 'Source Barrier')
    elif text == 'North Barrier':
        await send_pushcut_request(update, URL_NORTH, 'North Barrier')
    else:
        await update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –∫–Ω–æ–ø–∫—É –∏–∑ –º–µ–Ω—é.')

# üö™ –û—Ç–ø—Ä–∞–≤–∫–∞ Pushcut-–∑–∞–ø—Ä–æ—Å–∞
async def send_pushcut_request(update: Update, url: str, name: str):
    try:
        response = requests.post(url)
        if response.status_code == 200:
            await update.message.reply_text(f'üü¢ {name} –æ—Ç–∫—Ä—ã—Ç ‚úÖ')
        else:
            await update.message.reply_text(f'‚ö†Ô∏è {name} ‚Äî –æ—à–∏–±–∫–∞: {response.status_code}')
    except Exception as e:
        await update.message.reply_text(f'‚ùå {name} ‚Äî –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ: {e}')

# üöÄ –ó–∞–ø—É—Å–∫
if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN2).build()

    app.add_handler(CommandHandler('start', start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
